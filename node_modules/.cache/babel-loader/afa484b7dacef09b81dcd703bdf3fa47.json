{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nntca\\\\Desktop\\\\proj\\\\chess-web-app\\\\src\\\\ChessApp.js\";\nimport './ChessApp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChessApp = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ChessBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChessApp;\n\nconst initializeChessBoard = () => {\n  const board = {};\n  const letterIds = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numberIds = [1, 2, 3, 4, 5, 6, 7, 8];\n  var dark = true;\n\n  for (var letter of letterIds) {\n    const squares = {};\n\n    for (var number of numberIds) {\n      squares[number] = {\n        color: dark ? 'darkGray' : 'lightGray',\n        piece: null\n      };\n      dark = !dark;\n    }\n\n    dark = !dark;\n    board[letter] = squares;\n  }\n\n  return board;\n};\n\nconst ChessBoard = () => {\n  const [chessBoard, setChessBoard] = [initializeChessBoard()];\n  console.log(chessBoard);\n  console.log(chessBoard['a']['1']);\n  var drawRow = 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr',\n      gridTemplateRows: '1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr'\n    },\n    children: Object.keys(chessBoard).map(letter => {\n      var drawCol = 1;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row'\n        },\n        children: Object.keys(chessBoard[letter]).map(number => {\n          const styleSquare = {\n            backgroundColor: chessBoard[letter][number].color,\n            gridColumnStart: drawCol,\n            gridColumnEnd: drawCol + 1,\n            gridRowStart: drawRow,\n            gridRowEnd: drawRow + 1\n          };\n          drawCol++;\n          drawRow++;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styleSquare,\n            children: [letter, number]\n          }, (letter, number), true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this);\n        })\n      }, letter, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ChessBoard;\nexport default ChessApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChessApp\");\n$RefreshReg$(_c2, \"ChessBoard\");","map":{"version":3,"sources":["C:/Users/nntca/Desktop/proj/chess-web-app/src/ChessApp.js"],"names":["ChessApp","initializeChessBoard","board","letterIds","numberIds","dark","letter","squares","number","color","piece","ChessBoard","chessBoard","setChessBoard","console","log","drawRow","display","gridTemplateColumns","gridTemplateRows","Object","keys","map","drawCol","flexDirection","styleSquare","backgroundColor","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd"],"mappings":"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","sourcesContent":["import './ChessApp.css';\n\nconst ChessApp = () => {\n  return (\n    <div>\n      <ChessBoard />\n    </div>\n  )\n}\n\nconst initializeChessBoard = () => {\n  const board = {}\n  const letterIds = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n  const numberIds = [1, 2, 3, 4, 5, 6, 7, 8]\n  var dark = true\n  for (var letter of letterIds) {\n    const squares = {}\n    for (var number of numberIds) {\n      squares[number] = {\n        color: dark ? 'darkGray' : 'lightGray',\n        piece: null\n      }\n      dark = !dark\n    }\n    dark = !dark\n    board[letter] = squares\n  }\n  return board\n}\n\nconst ChessBoard = () => {\n  const [chessBoard, setChessBoard] = [initializeChessBoard()]\n\n  console.log(chessBoard)\n  console.log(chessBoard['a']['1']);\n\n  var drawRow = 1\n  return (\n    <div style={{display:'grid', gridTemplateColumns:'1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr', gridTemplateRows:'1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr'}}>\n      {Object.keys(chessBoard).map(letter => {\n        var drawCol = 1\n        return (\n          <div key={letter} style={{display:'flex', flexDirection:'row'}}>\n            {Object.keys(chessBoard[letter]).map(number => {\n              const styleSquare = {\n                backgroundColor: chessBoard[letter][number].color,\n                gridColumnStart: drawCol,\n                gridColumnEnd: drawCol + 1,\n                gridRowStart: drawRow,\n                gridRowEnd: drawRow + 1\n              }\n              drawCol++\n              drawRow++\n\n              return (\n                <div key={letter, number} style={styleSquare}>\n                  {letter}{number}\n                </div>\n              )\n            })}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ChessApp"]},"metadata":{},"sourceType":"module"}