{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nntca\\\\Desktop\\\\proj\\\\chess-web-app\\\\src\\\\ChessApp.js\";\nimport './ChessApp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChessApp = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ChessBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChessApp;\n\nconst initializeChessBoard = () => {\n  const board = {};\n  const letterIds = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numberIds = [1, 2, 3, 4, 5, 6, 7, 8];\n  var dark = true;\n\n  for (var letter of letterIds) {\n    const squares = {};\n\n    for (var number of numberIds) {\n      squares[number] = {\n        color: dark ? 'darkGray' : 'lightGray',\n        piece: null\n      };\n      dark = !dark;\n    }\n\n    dark = !dark;\n    board[letter] = squares;\n  }\n\n  return board;\n};\n\nconst ChessBoard = () => {\n  const [chessBoard, setChessBoard] = [initializeChessBoard()];\n  console.log(chessBoard);\n  console.log(chessBoard['a']['1']);\n  const squarePx = 50;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DrawBoard, {\n      chessBoard: chessBoard,\n      squarePx: squarePx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ChessBoard;\n\nconst DrawBoard = _ref => {\n  let {\n    chessBoard,\n    squarePx\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(DrawRows, {\n    chessBoard: chessBoard,\n    squarePx: squarePx\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = DrawBoard;\n\nconst DrawRows = _ref2 => {\n  let {\n    chessBoard,\n    squarePx\n  } = _ref2;\n  const rowStyles = {\n    display: 'grid',\n    gridTemplateRows: `${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: rowStyles,\n    children: Object.keys(chessBoard).map(letter => /*#__PURE__*/_jsxDEV(DrawColumns, {\n      letter: letter,\n      chessBoard: chessBoard,\n      squarePx: squarePx\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 46\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = DrawRows;\n\nconst DrawColumns = _ref3 => {\n  let {\n    letter,\n    chessBoard,\n    squarePx\n  } = _ref3;\n  var columnCounter = 1;\n  const columnStyles = {\n    display: 'grid',\n    gridTemplateColumns: `${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: columnStyles,\n    children: Object.keys(chessBoard[letter]).map(number => {\n      const squareStyle = {\n        backgroundColor: chessBoard[letter][number].color,\n        gridColStart: columnCounter,\n        gridColEnd: columnCounter + 1\n      };\n      columnCounter++;\n      return /*#__PURE__*/_jsxDEV(DrawSquare, {\n        letter: letter,\n        number: number,\n        squareStyle: squareStyle\n      }, `${letter}${number}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = DrawColumns;\n\nconst DrawSquare = _ref4 => {\n  let {\n    letter,\n    number,\n    squareStyle\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: squareStyle,\n    children: [letter, number]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = DrawSquare;\nexport default ChessApp;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ChessApp\");\n$RefreshReg$(_c2, \"ChessBoard\");\n$RefreshReg$(_c3, \"DrawBoard\");\n$RefreshReg$(_c4, \"DrawRows\");\n$RefreshReg$(_c5, \"DrawColumns\");\n$RefreshReg$(_c6, \"DrawSquare\");","map":{"version":3,"sources":["C:/Users/nntca/Desktop/proj/chess-web-app/src/ChessApp.js"],"names":["ChessApp","initializeChessBoard","board","letterIds","numberIds","dark","letter","squares","number","color","piece","ChessBoard","chessBoard","setChessBoard","console","log","squarePx","DrawBoard","DrawRows","rowStyles","display","gridTemplateRows","Object","keys","map","DrawColumns","columnCounter","columnStyles","gridTemplateColumns","squareStyle","backgroundColor","gridColStart","gridColEnd","DrawSquare"],"mappings":"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","sourcesContent":["import './ChessApp.css';\n\nconst ChessApp = () => {\n  return (\n    <div>\n      <ChessBoard />\n    </div>\n  )\n}\n\nconst initializeChessBoard = () => {\n  const board = {}\n  const letterIds = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n  const numberIds = [1, 2, 3, 4, 5, 6, 7, 8]\n  var dark = true\n  for (var letter of letterIds) {\n    const squares = {}\n    for (var number of numberIds) {\n      squares[number] = {\n        color: dark ? 'darkGray' : 'lightGray',\n        piece: null\n      }\n      dark = !dark\n    }\n    dark = !dark\n    board[letter] = squares\n  }\n  return board\n}\n\n\nconst ChessBoard = () => {\n  const [chessBoard, setChessBoard] = [initializeChessBoard()]\n\n  console.log(chessBoard)\n  console.log(chessBoard['a']['1']);\n\n  const squarePx = 50\n\n  return (\n    <div>\n      <DrawBoard chessBoard={chessBoard} squarePx={squarePx}/>\n    </div>\n  )\n}\n\nconst DrawBoard = ({ chessBoard, squarePx }) => {\n  return <DrawRows chessBoard={chessBoard} squarePx={squarePx} />\n}\n\nconst DrawRows = ({ chessBoard, squarePx }) => {\n  const rowStyles = {\n    display:'grid', \n    gridTemplateRows:`${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px`\n  }\n  return (\n    <div style={rowStyles}>\n      {Object.keys(chessBoard).map(letter => <DrawColumns key={letter} letter={letter} chessBoard={chessBoard} squarePx={squarePx}/>)}\n    </div>\n  )\n}\n\nconst DrawColumns = ({ letter, chessBoard, squarePx }) => {\n  var columnCounter = 1\n  const columnStyles = {\n    display:'grid', \n    gridTemplateColumns:`${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px ${squarePx}px`\n  }\n  return (\n    <div style={columnStyles}>\n      {Object.keys(chessBoard[letter]).map(number => {\n        const squareStyle = {\n          backgroundColor: chessBoard[letter][number].color,\n          gridColStart: columnCounter,\n          gridColEnd: columnCounter + 1\n        }\n        columnCounter++\n        return <DrawSquare key={`${letter}${number}`} letter={letter} number={number} squareStyle={squareStyle}/>\n      })}\n    </div>\n  )\n}\n\nconst DrawSquare = ({ letter, number, squareStyle }) => {\n  return (\n    <div style={squareStyle}>\n      {letter}{number}\n    </div>\n  )\n}\nexport default ChessApp"]},"metadata":{},"sourceType":"module"}