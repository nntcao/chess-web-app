{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nntca\\\\Desktop\\\\proj\\\\chess-web-app\\\\src\\\\components\\\\DrawBoard.js\";\nimport kinglight from '../images/Chess_klt45.svg';\nimport kingdark from '../images/Chess_kdt45.svg';\nimport queenlight from '../images/Chess_qlt45.svg';\nimport queendark from '../images/Chess_qdt45.svg';\nimport bishoplight from '../images/Chess_blt45.svg';\nimport bishopdark from '../images/Chess_bdt45.svg';\nimport knightlight from '../images/Chess_nlt45.svg';\nimport knightdark from '../images/Chess_ndt45.svg';\nimport rooklight from '../images/Chess_rlt45.svg';\nimport rookdark from '../images/Chess_rdt45.svg';\nimport pawnlight from '../images/Chess_plt45.svg';\nimport pawndark from '../images/Chess_pdt45.svg';\nimport marker from '../images/circle-64.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pieceImages = {\n  kl: kinglight,\n  kd: kingdark,\n  ql: queenlight,\n  qd: queendark,\n  bl: bishoplight,\n  bd: bishopdark,\n  nl: knightlight,\n  nd: knightdark,\n  rl: rooklight,\n  rd: rookdark,\n  pl: pawnlight,\n  pd: pawndark\n};\nconst numberToLetter = {\n  1: 'a',\n  2: 'b',\n  3: 'c',\n  4: 'd',\n  5: 'e',\n  6: 'f',\n  7: 'g',\n  8: 'h'\n};\n\nconst DrawBoard = _ref => {\n  let {\n    chessBoard,\n    onPieceClickHandler\n  } = _ref;\n  const LENGTH = Math.min(window.innerWidth, window.innerHeight);\n  const BOARD_LENGTH = Math.round(LENGTH * 0.80);\n  const styleBoard = {\n    width: `${BOARD_LENGTH}px`,\n    height: `${BOARD_LENGTH}px`,\n    position: 'absolute',\n    margin: 'auto',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styleBoard,\n    children: /*#__PURE__*/_jsxDEV(DrawRows, {\n      chessBoard: chessBoard,\n      onPieceClickHandler: onPieceClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DrawBoard;\n\nconst DrawRows = _ref2 => {\n  let {\n    chessBoard,\n    onPieceClickHandler\n  } = _ref2;\n  const rowStyles = {\n    display: 'grid',\n    gridTemplateColumns: '12.5% 12.5% 12.5% 12.5% 12.5% 12.5% 12.5% 12.5%',\n    height: '100%',\n    width: '100%'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: rowStyles,\n    children: Object.keys(chessBoard).map(letter => /*#__PURE__*/_jsxDEV(DrawColumns, {\n      letter: letter,\n      chessBoard: chessBoard,\n      onPieceClickHandler: onPieceClickHandler\n    }, letter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 46\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = DrawRows;\n\nconst DrawColumns = _ref3 => {\n  let {\n    letter,\n    chessBoard,\n    onPieceClickHandler\n  } = _ref3;\n  var columnCounter = 1;\n  const columnStyles = {\n    display: 'grid',\n    gridTemplateRows: '12.5% 12.5% 12.5% 12.5% 12.5% 12.5% 12.5% 12.5%',\n    gridTemplateColumns: '100%'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: columnStyles,\n    children: Object.keys(chessBoard[letter]).slice(0).reverse().map(number => {\n      const squareStyle = {\n        backgroundColor: chessBoard[letter][number].color,\n        gridColStart: columnCounter,\n        gridColEnd: columnCounter + 1,\n        display: 'block',\n        position: 'relative'\n      };\n      columnCounter++;\n      return /*#__PURE__*/_jsxDEV(DrawSquare, {\n        letter: letter,\n        number: number,\n        squareStyle: squareStyle,\n        chessBoard: chessBoard,\n        onPieceClickHandler: onPieceClickHandler\n      }, `${letter}${number}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = DrawColumns;\n\nconst DrawSquare = _ref4 => {\n  let {\n    letter,\n    number,\n    squareStyle,\n    chessBoard,\n    onPieceClickHandler\n  } = _ref4;\n  const chessPiece = chessBoard[letter][number].piece;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: squareStyle,\n    onClick: () => {\n      onPieceClickHandler(chessPiece, letter, number);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      children: [numberToLetter[letter], number]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DrawChessPiece, {\n      letter: letter,\n      number: number,\n      chessPiece: chessPiece,\n      chessBoard: chessBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = DrawSquare;\n\nconst DrawChessPiece = _ref5 => {\n  let {\n    letter,\n    number,\n    chessBoard,\n    chessPiece\n  } = _ref5;\n  const imageDivStyle = {\n    display: 'inline-block',\n    overflow: \"hidden\",\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    minWidth: '100%',\n    minHeight: '100%'\n  };\n  const imageStyle = {\n    minWidth: '100%',\n    minHeight: '100%',\n    width: 'auto',\n    height: 'auto'\n  };\n  const markerStyle = {\n    minWidth: '100%',\n    minHeight: '100%',\n    width: 'auto',\n    height: 'auto',\n    position: 'absolute',\n    opacity: 0.4\n  };\n\n  if (chessPiece.type === null) {\n    if (chessBoard[letter][number].indicatorMoveHere === true) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: imageDivStyle,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: marker,\n          style: {\n            markerStyle\n          },\n          alt: \"chess marker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  } else {\n    var pieceType = chessBoard[letter][number].piece.type;\n    var pieceColor = chessBoard[letter][number].piece.color;\n\n    if (chessBoard[letter][number].indicatorMoveHere === true) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: imageDivStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: pieceImages[`${pieceType}${pieceColor}`],\n          style: {\n            imageStyle\n          },\n          alt: \"chess piece\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: marker,\n          style: {\n            markerStyle\n          },\n          alt: \"chess marker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: imageDivStyle,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: pieceImages[`${pieceType}${pieceColor}`],\n        style: {\n          imageStyle\n        },\n        alt: \"chess piece\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c5 = DrawChessPiece;\nexport default DrawBoard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DrawBoard\");\n$RefreshReg$(_c2, \"DrawRows\");\n$RefreshReg$(_c3, \"DrawColumns\");\n$RefreshReg$(_c4, \"DrawSquare\");\n$RefreshReg$(_c5, \"DrawChessPiece\");","map":{"version":3,"sources":["C:/Users/nntca/Desktop/proj/chess-web-app/src/components/DrawBoard.js"],"names":["kinglight","kingdark","queenlight","queendark","bishoplight","bishopdark","knightlight","knightdark","rooklight","rookdark","pawnlight","pawndark","marker","pieceImages","kl","kd","ql","qd","bl","bd","nl","nd","rl","rd","pl","pd","numberToLetter","DrawBoard","chessBoard","onPieceClickHandler","LENGTH","Math","min","window","innerWidth","innerHeight","BOARD_LENGTH","round","styleBoard","width","height","position","margin","top","bottom","left","right","DrawRows","rowStyles","display","gridTemplateColumns","Object","keys","map","letter","DrawColumns","columnCounter","columnStyles","gridTemplateRows","slice","reverse","number","squareStyle","backgroundColor","color","gridColStart","gridColEnd","DrawSquare","chessPiece","piece","DrawChessPiece","imageDivStyle","overflow","minWidth","minHeight","imageStyle","markerStyle","opacity","type","indicatorMoveHere","pieceType","pieceColor"],"mappings":"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","sourcesContent":["import kinglight from '../images/Chess_klt45.svg'\r\nimport kingdark from '../images/Chess_kdt45.svg'\r\nimport queenlight from '../images/Chess_qlt45.svg'\r\nimport queendark from '../images/Chess_qdt45.svg'\r\nimport bishoplight from '../images/Chess_blt45.svg'\r\nimport bishopdark from '../images/Chess_bdt45.svg'\r\nimport knightlight from '../images/Chess_nlt45.svg'\r\nimport knightdark from '../images/Chess_ndt45.svg'\r\nimport rooklight from '../images/Chess_rlt45.svg'\r\nimport rookdark from '../images/Chess_rdt45.svg'\r\nimport pawnlight from '../images/Chess_plt45.svg'\r\nimport pawndark from '../images/Chess_pdt45.svg'\r\nimport marker from '../images/circle-64.png'\r\n\r\nconst pieceImages = {\r\n    kl: kinglight,\r\n    kd: kingdark,\r\n    ql: queenlight,\r\n    qd: queendark,\r\n    bl: bishoplight,\r\n    bd: bishopdark,\r\n    nl: knightlight,\r\n    nd: knightdark,\r\n    rl: rooklight,\r\n    rd: rookdark,\r\n    pl: pawnlight,\r\n    pd: pawndark \r\n}\r\n\r\nconst numberToLetter = {\r\n    1: 'a',\r\n    2: 'b',\r\n    3: 'c',\r\n    4: 'd',\r\n    5: 'e',\r\n    6: 'f',\r\n    7: 'g',\r\n    8: 'h'\r\n}\r\n  \r\nconst DrawBoard = ({ chessBoard, onPieceClickHandler }) => {\r\n  const LENGTH = Math.min(window.innerWidth, window.innerHeight)\r\n  const BOARD_LENGTH = Math.round(LENGTH * 0.80)\r\n\r\n  const styleBoard = {\r\n    width: `${BOARD_LENGTH}px`,\r\n    height: `${BOARD_LENGTH}px`,\r\n    position: 'absolute',\r\n    margin: 'auto',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n  }\r\n\r\n\r\n  return (\r\n    <div style={styleBoard}>\r\n      <DrawRows chessBoard={chessBoard} onPieceClickHandler={onPieceClickHandler}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DrawRows = ({ chessBoard, onPieceClickHandler }) => {\r\n  const rowStyles = {\r\n    display:'grid', \r\n    gridTemplateColumns:'12.5% 12.5% 12.5% 12.5% 12.5% 12.5% 12.5% 12.5%',\r\n    height: '100%',\r\n    width: '100%'\r\n  }\r\n  return (\r\n    <div style={rowStyles}>\r\n      {Object.keys(chessBoard).map(letter => <DrawColumns key={letter} letter={letter} chessBoard={chessBoard} onPieceClickHandler={onPieceClickHandler}/>)}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DrawColumns = ({ letter, chessBoard, onPieceClickHandler }) => {\r\n  var columnCounter = 1\r\n  const columnStyles = {\r\n    display:'grid', \r\n    gridTemplateRows:'12.5% 12.5% 12.5% 12.5% 12.5% 12.5% 12.5% 12.5%',\r\n    gridTemplateColumns: '100%'\r\n  }\r\n  return (\r\n    <div style={columnStyles}>\r\n      {Object.keys(chessBoard[letter]).slice(0).reverse().map(number => {\r\n        const squareStyle = {\r\n          backgroundColor: chessBoard[letter][number].color,\r\n          gridColStart: columnCounter,\r\n          gridColEnd: columnCounter + 1,\r\n          display: 'block',\r\n          position: 'relative'\r\n        }\r\n        columnCounter++\r\n        return <DrawSquare key={`${letter}${number}`} letter={letter} number={number} squareStyle={squareStyle} chessBoard={chessBoard} onPieceClickHandler={onPieceClickHandler}/>\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DrawSquare = ({ letter, number, squareStyle, chessBoard, onPieceClickHandler }) => {\r\n  const chessPiece = chessBoard[letter][number].piece\r\n\r\n  return (\r\n    <div style={squareStyle} onClick={() => {onPieceClickHandler(chessPiece, letter, number)}}>\r\n      <div style={{}}>\r\n        {numberToLetter[letter]}{number}\r\n      </div>\r\n      <DrawChessPiece letter={letter} number={number} chessPiece={chessPiece} chessBoard={chessBoard}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DrawChessPiece = ({ letter, number, chessBoard, chessPiece }) => {\r\n  \r\n  const imageDivStyle = {\r\n    display: 'inline-block',\r\n    overflow: \"hidden\",\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    minWidth: '100%',\r\n    minHeight: '100%'\r\n  }\r\n\r\n  const imageStyle = {\r\n    minWidth: '100%',\r\n    minHeight: '100%',\r\n    width: 'auto',\r\n    height: 'auto',\r\n  }\r\n\r\n  const markerStyle = {\r\n    minWidth: '100%',\r\n    minHeight: '100%',\r\n    width: 'auto',\r\n    height: 'auto',\r\n    position: 'absolute',\r\n    opacity: 0.4,\r\n  }\r\n\r\n  if (chessPiece.type === null) {\r\n    if (chessBoard[letter][number].indicatorMoveHere === true) {\r\n      return (\r\n        <div style={imageDivStyle}>\r\n          <img src={marker} style={{markerStyle}} alt='chess marker' />\r\n        </div>\r\n      )    \r\n    }\r\n    return null\r\n  }\r\n  else {\r\n    var pieceType = chessBoard[letter][number].piece.type\r\n    var pieceColor = chessBoard[letter][number].piece.color\r\n    if (chessBoard[letter][number].indicatorMoveHere === true) {\r\n      return (\r\n        <div style={imageDivStyle}>\r\n          <img src={pieceImages[`${pieceType}${pieceColor}`]} style={{imageStyle}} alt='chess piece' />\r\n          <img src={marker} style={{markerStyle}} alt='chess marker'/>\r\n        </div>        \r\n      )\r\n    }\r\n    return (\r\n      <div style={imageDivStyle}>\r\n        <img src={pieceImages[`${pieceType}${pieceColor}`]} style={{imageStyle}} alt='chess piece'/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DrawBoard"]},"metadata":{},"sourceType":"module"}