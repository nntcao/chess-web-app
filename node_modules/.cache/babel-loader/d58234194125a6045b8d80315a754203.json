{"ast":null,"code":"const isPieceAtPosition = (chessBoard, letter, number) => {\n  console.log(`${letterCheck}, ${numberCheck}`);\n\n  if (chessBoard[letterCheck][numberCheck].type === null) {\n    return false;\n  }\n\n  return true;\n};\n\nconst isLocationWithinBounds = (letter, number) => {\n  return letter >= 1 && letter <= 8 && number >= 1 && number <= 8;\n};\n\nconst showPossibleMoves = (chessBoard, possibleMovesToShow) => {\n  for (var i = 0; i < possibleMovesToShow.length; i++) {\n    const letterIndexToShow = possibleMovesToShow[i][0];\n    const numberIndexToShow = possibleMovesToShow[i][1];\n    chessBoard[letterIndexToShow][numberIndexToShow].chessPiece.canMoveHere = true;\n  }\n};\n\nconst getPossibleMovesKing = (chessBoard, letter, number) => {\n  const possibleMoves = [];\n\n  for (var i = -1; i <= 1; i++) {\n    for (var j = -1; j <= 1; j++) {\n      if (isLocationWithinBounds(letter + i, number + j)) {\n        if (!isPieceAtPosition(chessBoard, letter + i, number + j)) possibleMoves.push([letter + i, number + j]);\n      }\n    }\n  }\n\n  console.log(possibleMoves);\n  return possibleMoves;\n};\n\nconst getPossibleMovesPawn = (chessBoard, letter, number) => {\n  const possibleMoves = [];\n\n  if (number === 2) {\n    if (isLocationWithinBounds(letter, number + 2)) {\n      if (!isPieceAtPosition(chessBoard, letter, number + 2)) {\n        possibleMoves.push([letter, number + 2]);\n      }\n    }\n  }\n\n  if (isLocationWithinBounds(letter, number + 1)) {\n    if (!isPieceAtPosition(chessBoard, letter, number + 1)) {\n      possibleMoves.push([letter, number + 1]);\n    }\n  }\n\n  console.log(possibleMoves);\n  return possibleMoves;\n};\n\nexport default {\n  showPossibleMoves,\n  getPossibleMovesKing,\n  getPossibleMovesPawn\n};","map":{"version":3,"sources":["C:/Users/nntca/Desktop/proj/chess-web-app/src/managers/ChessLogicManager.js"],"names":["isPieceAtPosition","chessBoard","letter","number","console","log","letterCheck","numberCheck","type","isLocationWithinBounds","showPossibleMoves","possibleMovesToShow","i","length","letterIndexToShow","numberIndexToShow","chessPiece","canMoveHere","getPossibleMovesKing","possibleMoves","j","push","getPossibleMovesPawn"],"mappings":"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","sourcesContent":["const isPieceAtPosition = (chessBoard, letter, number) => {\r\n    console.log(`${letterCheck}, ${numberCheck}`)\r\n    if (chessBoard[letterCheck][numberCheck].type === null) {\r\n        return false\r\n    }\r\n    return true\r\n}\r\n\r\nconst isLocationWithinBounds = (letter, number) => {\r\n    return ((letter >= 1) && (letter <= 8)) && ((number >= 1) && (number <= 8))\r\n}\r\n\r\nconst showPossibleMoves = (chessBoard, possibleMovesToShow) => {\r\n    for (var i = 0; i < possibleMovesToShow.length; i++) {\r\n        const letterIndexToShow = possibleMovesToShow[i][0]\r\n        const numberIndexToShow = possibleMovesToShow[i][1]\r\n\r\n        chessBoard[letterIndexToShow][numberIndexToShow].chessPiece.canMoveHere = true\r\n    }\r\n}\r\n\r\nconst getPossibleMovesKing = (chessBoard, letter, number) => {\r\n    const possibleMoves = []\r\n\r\n    for (var i = -1; i <= 1; i++) {\r\n        for (var j = -1; j <= 1; j++) {\r\n        if (isLocationWithinBounds(letter + i, number + j)) {\r\n            if (!isPieceAtPosition(chessBoard, letter + i, number + j))\r\n            possibleMoves.push([letter + i, number + j])\r\n        }\r\n        }\r\n    }\r\n    console.log(possibleMoves)\r\n    return possibleMoves \r\n}\r\n\r\nconst getPossibleMovesPawn = (chessBoard, letter, number) => {\r\n    const possibleMoves = []\r\n\r\n    if (number === 2) {\r\n        if (isLocationWithinBounds(letter, number + 2)) {\r\n            if (!isPieceAtPosition(chessBoard, letter, number + 2)) {\r\n\r\n                possibleMoves.push([letter, number + 2])\r\n            }\r\n        }\r\n    }\r\n    if (isLocationWithinBounds(letter, number + 1)) {\r\n        if (!isPieceAtPosition(chessBoard, letter, number + 1)) {\r\n        possibleMoves.push([letter, number + 1])\r\n        }\r\n    }\r\n    console.log(possibleMoves)\r\n    return possibleMoves \r\n}\r\n\r\nexport default {\r\n    showPossibleMoves,\r\n    getPossibleMovesKing,\r\n    getPossibleMovesPawn\r\n}"]},"metadata":{},"sourceType":"module"}