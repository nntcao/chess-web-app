{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nntca\\\\Desktop\\\\proj\\\\chess-web-app\\\\src\\\\ChessApp.js\",\n    _s = $RefreshSig$();\n\nimport './ChessApp.css';\nimport react, { useState, useEffect } from 'react';\nimport DrawBoard from './components/DrawBoard';\nimport ChessLogicManager from './managers/ChessLogicManager';\nimport InitializerManager from './managers/InitializerManager';\nimport kinglight from './images/Chess_klt45.svg';\nimport kingdark from './images/Chess_kdt45.svg';\nimport queenlight from './images/Chess_qlt45.svg';\nimport queendark from './images/Chess_qdt45.svg';\nimport bishoplight from './images/Chess_blt45.svg';\nimport bishopdark from './images/Chess_bdt45.svg';\nimport knightlight from './images/Chess_nlt45.svg';\nimport knightdark from './images/Chess_ndt45.svg';\nimport rooklight from './images/Chess_rlt45.svg';\nimport rookdark from './images/Chess_rdt45.svg';\nimport pawnlight from './images/Chess_plt45.svg';\nimport pawndark from './images/Chess_pdt45.svg';\nimport marker from './images/circle-64.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numberToLetter = {\n  1: 'a',\n  2: 'b',\n  3: 'c',\n  4: 'd',\n  5: 'e',\n  6: 'f',\n  7: 'g',\n  8: 'h'\n};\n\nconst ChessApp = () => {\n  _s();\n\n  const [chessBoard, setChessBoard] = useState(initializeChessBoard());\n  const [isDisplayingPossibleMoves, setisDisplayingPossibleMoves] = useState(false);\n\n  const onPieceClickHandler = (chessPiece, letter, number) => {\n    var possibleMoves = [];\n\n    switch (chessPiece.type) {\n      case null:\n        return null;\n\n      case 'k':\n        possibleMoves = ChessLogicManager.getPossibleMovesKing();\n        break;\n\n      case 'q':\n        break;\n\n      case 'b':\n        break;\n\n      case 'n':\n        break;\n\n      case 'r':\n        break;\n\n      case 'p':\n        possibleMoves = ChessLogicManager.getPossibleMovesPawn();\n        break;\n\n      default:\n        break;\n    }\n\n    console.log(chessPiece);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DrawBoard, {\n      chessBoard: chessBoard,\n      onPieceClickHandler: onPieceClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChessApp, \"0kCbDVwSM5FkIyDz3C1zuq16nnE=\");\n\n_c = ChessApp;\nexport default ChessApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChessApp\");","map":{"version":3,"sources":["C:/Users/nntca/Desktop/proj/chess-web-app/src/ChessApp.js"],"names":["react","useState","useEffect","DrawBoard","ChessLogicManager","InitializerManager","kinglight","kingdark","queenlight","queendark","bishoplight","bishopdark","knightlight","knightdark","rooklight","rookdark","pawnlight","pawndark","marker","numberToLetter","ChessApp","chessBoard","setChessBoard","initializeChessBoard","isDisplayingPossibleMoves","setisDisplayingPossibleMoves","onPieceClickHandler","chessPiece","letter","number","possibleMoves","type","getPossibleMovesKing","getPossibleMovesPawn","console","log"],"mappings":";;;AAAA,OAAO,gBAAP;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AAEA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;;AAGA,MAAMC,cAAc,GAAG;AACrB,KAAG,GADkB;AAErB,KAAG,GAFkB;AAGrB,KAAG,GAHkB;AAIrB,KAAG,GAJkB;AAKrB,KAAG,GALkB;AAMrB,KAAG,GANkB;AAOrB,KAAG,GAPkB;AAQrB,KAAG;AARkB,CAAvB;;AAWA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAACsB,oBAAoB,EAArB,CAA5C;AACA,QAAM,CAACC,yBAAD,EAA4BC,4BAA5B,IAA4DxB,QAAQ,CAAC,KAAD,CAA1E;;AAEA,QAAMyB,mBAAmB,GAAG,CAACC,UAAD,EAAaC,MAAb,EAAqBC,MAArB,KAAgC;AAE1D,QAAIC,aAAa,GAAG,EAApB;;AAEA,YAAQH,UAAU,CAACI,IAAnB;AACE,WAAK,IAAL;AACE,eAAO,IAAP;;AACF,WAAK,GAAL;AACED,QAAAA,aAAa,GAAG1B,iBAAiB,CAAC4B,oBAAlB,EAAhB;AACA;;AACF,WAAK,GAAL;AACE;;AACF,WAAK,GAAL;AACE;;AACF,WAAK,GAAL;AACE;;AACF,WAAK,GAAL;AACE;;AACF,WAAK,GAAL;AACEF,QAAAA,aAAa,GAAG1B,iBAAiB,CAAC6B,oBAAlB,EAAhB;AACA;;AACF;AACE;AAlBJ;;AAqBAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAZ;AAED,GA3BD;;AA6BA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEN,UAAvB;AAAmC,MAAA,mBAAmB,EAAEK;AAAxD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvCD;;GAAMN,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import './ChessApp.css';\n\nimport react, { useState, useEffect } from 'react'\nimport DrawBoard from './components/DrawBoard'\nimport ChessLogicManager from './managers/ChessLogicManager'\nimport InitializerManager from './managers/InitializerManager'\n\nimport kinglight from './images/Chess_klt45.svg'\nimport kingdark from './images/Chess_kdt45.svg'\nimport queenlight from './images/Chess_qlt45.svg'\nimport queendark from './images/Chess_qdt45.svg'\nimport bishoplight from './images/Chess_blt45.svg'\nimport bishopdark from './images/Chess_bdt45.svg'\nimport knightlight from './images/Chess_nlt45.svg'\nimport knightdark from './images/Chess_ndt45.svg'\nimport rooklight from './images/Chess_rlt45.svg'\nimport rookdark from './images/Chess_rdt45.svg'\nimport pawnlight from './images/Chess_plt45.svg'\nimport pawndark from './images/Chess_pdt45.svg'\n\nimport marker from './images/circle-64.png'\n\n\nconst numberToLetter = {\n  1: 'a',\n  2: 'b',\n  3: 'c',\n  4: 'd',\n  5: 'e',\n  6: 'f',\n  7: 'g',\n  8: 'h'\n}\n\nconst ChessApp = () => {\n\n  const [chessBoard, setChessBoard] = useState(initializeChessBoard())\n  const [isDisplayingPossibleMoves, setisDisplayingPossibleMoves] = useState(false)\n\n  const onPieceClickHandler = (chessPiece, letter, number) => {\n\n    var possibleMoves = []\n\n    switch (chessPiece.type) {\n      case null:\n        return null\n      case 'k':\n        possibleMoves = ChessLogicManager.getPossibleMovesKing()\n        break;\n      case 'q':\n        break;\n      case 'b':\n        break;\n      case 'n':\n        break;\n      case 'r':\n        break;\n      case 'p':\n        possibleMoves = ChessLogicManager.getPossibleMovesPawn()\n        break;\n      default:\n        break;\n    }\n\n    console.log(chessPiece);\n\n  }\n\n  return (\n    <div>\n      <DrawBoard chessBoard={chessBoard} onPieceClickHandler={onPieceClickHandler}/>\n    </div>\n  )\n}\n\n\nexport default ChessApp"]},"metadata":{},"sourceType":"module"}