{"ast":null,"code":"const pieceImages = {\n  kl: kinglight,\n  kd: kingdark,\n  ql: queenlight,\n  qd: queendark,\n  bl: bishoplight,\n  bd: bishopdark,\n  nl: knightlight,\n  nd: knightdark,\n  rl: rooklight,\n  rd: rookdark,\n  pl: pawnlight,\n  pd: pawndark\n};\nconst initialPieces = {\n  1: 'r',\n  2: 'n',\n  3: 'b',\n  4: 'q',\n  5: 'k',\n  6: 'b',\n  7: 'n',\n  8: 'r'\n};\n\nconst initializeChessBoard = () => {\n  const board = {};\n  const letterIds = [1, 2, 3, 4, 5, 6, 7, 8]; // 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'\n\n  const numberIds = [1, 2, 3, 4, 5, 6, 7, 8];\n  var dark = true;\n\n  for (var letter of letterIds) {\n    const squares = {};\n\n    for (var number of numberIds) {\n      var colorPiece = null;\n      var typePiece = null;\n\n      if (number === 1 || number === 2) {\n        colorPiece = 'l';\n\n        if (number === 1 || number === 8) {\n          typePiece = initialPieces[letter];\n        } else {\n          typePiece = 'p';\n        }\n      } else if (number === 7 || number === 8) {\n        colorPiece = 'd';\n\n        if (number === 1 || number === 8) {\n          typePiece = initialPieces[letter];\n        } else {\n          typePiece = 'p';\n        }\n      }\n\n      var pickedPiece = {\n        type: typePiece,\n        color: colorPiece,\n        clicked: false,\n        canMoveHere: false\n      }; // console.log(pickedPiece);\n\n      squares[number] = {\n        color: dark ? 'darkGray' : 'lightGray',\n        piece: pickedPiece // piece: null\n        // piece: {\n        //   type: 'q',\n        //   color: 'l'\n        // }\n\n      };\n      dark = !dark;\n    }\n\n    dark = !dark;\n    board[letter] = squares;\n  }\n\n  console.log(board);\n  return board;\n};\n\nexport default {\n  initializeChessBoard\n};","map":{"version":3,"sources":["C:/Users/nntca/Desktop/proj/chess-web-app/src/managers/InitializerManager.js"],"names":["pieceImages","kl","kinglight","kd","kingdark","ql","queenlight","qd","queendark","bl","bishoplight","bd","bishopdark","nl","knightlight","nd","knightdark","rl","rooklight","rd","rookdark","pl","pawnlight","pd","pawndark","initialPieces","initializeChessBoard","board","letterIds","numberIds","dark","letter","squares","number","colorPiece","typePiece","pickedPiece","type","color","clicked","canMoveHere","piece","console","log"],"mappings":"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","sourcesContent":["\r\nconst pieceImages = {\r\n    kl: kinglight,\r\n    kd: kingdark,\r\n    ql: queenlight,\r\n    qd: queendark,\r\n    bl: bishoplight,\r\n    bd: bishopdark,\r\n    nl: knightlight,\r\n    nd: knightdark,\r\n    rl: rooklight,\r\n    rd: rookdark,\r\n    pl: pawnlight,\r\n    pd: pawndark \r\n}\r\n\r\nconst initialPieces = {\r\n    1: 'r',\r\n    2: 'n',\r\n    3: 'b',\r\n    4: 'q',\r\n    5: 'k',\r\n    6: 'b',\r\n    7: 'n',\r\n    8: 'r'\r\n}\r\n\r\nconst initializeChessBoard = () => {\r\n  const board = {}\r\n  const letterIds = [1, 2, 3, 4, 5, 6, 7, 8]\r\n  // 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'\r\n  const numberIds = [1, 2, 3, 4, 5, 6, 7, 8]\r\n  var dark = true\r\n  for (var letter of letterIds) {\r\n    const squares = {}\r\n    for (var number of numberIds) {\r\n      var colorPiece = null\r\n      var typePiece = null\r\n\r\n      if (number === 1 || number === 2) {\r\n        colorPiece = 'l'\r\n        if (number === 1 || number === 8) {\r\n          typePiece = initialPieces[letter]\r\n        }\r\n        else {\r\n          typePiece = 'p'\r\n        }\r\n      }\r\n      else if (number === 7 || number === 8) {\r\n        colorPiece = 'd'\r\n        if (number === 1 || number === 8) {\r\n          typePiece = initialPieces[letter]\r\n        }\r\n        else {\r\n          typePiece = 'p'\r\n        }\r\n      }\r\n\r\n      var pickedPiece = {\r\n        type: typePiece,\r\n        color: colorPiece,\r\n        clicked: false,\r\n        canMoveHere: false\r\n      }\r\n      // console.log(pickedPiece);\r\n\r\n      squares[number] = {\r\n        color: dark ? 'darkGray' : 'lightGray',\r\n        piece: pickedPiece\r\n        // piece: null\r\n        // piece: {\r\n        //   type: 'q',\r\n        //   color: 'l'\r\n        // }\r\n      }\r\n      dark = !dark\r\n    }\r\n    dark = !dark\r\n    board[letter] = squares\r\n  }\r\n  console.log(board);\r\n  return board\r\n}\r\n  \r\nexport default { initializeChessBoard }"]},"metadata":{},"sourceType":"module"}