{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nntca\\\\Desktop\\\\proj\\\\chess-web-app\\\\src\\\\ChessApp.js\";\nimport './ChessApp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChessApp = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ChessBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChessApp;\n\nconst initializeChessBoard = () => {\n  const board = {};\n  const letterIds = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const numberIds = [1, 2, 3, 4, 5, 6, 7, 8];\n  var dark = true;\n\n  for (var i = 0; i < letterIds.length; i++) {\n    const squares = {};\n\n    for (var j = 0; j < numberIds.length; j++) {\n      squares[numberIds[j]] = {\n        color: dark ? 'dark' : 'light',\n        piece: null\n      };\n      dark = !dark;\n    }\n\n    board[letterIds[i]] = squares;\n  }\n\n  return board;\n};\n\nconst ChessBoard = () => {\n  const [chessBoard, setChessBoard] = [initializeChessBoard()];\n  console.log(chessBoard);\n  console.log(chessBoard['a']['1']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chessBoard.keys().map(letter => {\n      letter.keys().map(number => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [letter, \", \", number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      });\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ChessBoard;\nexport default ChessApp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ChessApp\");\n$RefreshReg$(_c2, \"ChessBoard\");","map":{"version":3,"sources":["C:/Users/nntca/Desktop/proj/chess-web-app/src/ChessApp.js"],"names":["ChessApp","initializeChessBoard","board","letterIds","numberIds","dark","i","length","squares","j","color","piece","ChessBoard","chessBoard","setChessBoard","console","log","keys","map","letter","number"],"mappings":";AAAA,OAAO,gBAAP;;;AAEA,MAAMA,QAAQ,GAAG,MAAM;AACrB,sBACE;AAAA,2BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMA,Q;;AAQN,MAAMC,oBAAoB,GAAG,MAAM;AACjC,QAAMC,KAAK,GAAG,EAAd;AACA,QAAMC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,CAAlB;AACA,QAAMC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,CAAlB;AACA,MAAIC,IAAI,GAAG,IAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAAS,CAACI,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,UAAME,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,SAAS,CAACG,MAA9B,EAAsCE,CAAC,EAAvC,EAA2C;AACzCD,MAAAA,OAAO,CAACJ,SAAS,CAACK,CAAD,CAAV,CAAP,GAAwB;AACtBC,QAAAA,KAAK,EAAEL,IAAI,GAAG,MAAH,GAAY,OADD;AAEtBM,QAAAA,KAAK,EAAE;AAFe,OAAxB;AAIAN,MAAAA,IAAI,GAAG,CAACA,IAAR;AACD;;AACDH,IAAAA,KAAK,CAACC,SAAS,CAACG,CAAD,CAAV,CAAL,GAAsBE,OAAtB;AACD;;AACD,SAAON,KAAP;AACD,CAjBD;;AAmBA,MAAMU,UAAU,GAAG,MAAM;AAGvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B,CAACb,oBAAoB,EAArB,CAApC;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAU,CAAC,GAAD,CAAV,CAAgB,GAAhB,CAAZ;AAEA,sBACE;AAAA,cACGA,UAAU,CAACI,IAAX,GAAkBC,GAAlB,CAAsBC,MAAM,IAAI;AAC/BA,MAAAA,MAAM,CAACF,IAAP,GAAcC,GAAd,CAAkBE,MAAM,IAAI;AAC1B,4BACE;AAAA,qBAAMD,MAAN,QAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAJD;AAKD,KANA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAnBD;;MAAMR,U;AAqBN,eAAeZ,QAAf","sourcesContent":["import './ChessApp.css';\n\nconst ChessApp = () => {\n  return (\n    <div>\n      <ChessBoard />\n    </div>\n  )\n}\n\nconst initializeChessBoard = () => {\n  const board = {}\n  const letterIds = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n  const numberIds = [1, 2, 3, 4, 5, 6, 7, 8]\n  var dark = true\n  for (var i = 0; i < letterIds.length; i++) {\n    const squares = {}\n    for (var j = 0; j < numberIds.length; j++) {\n      squares[numberIds[j]] = {\n        color: dark ? 'dark' : 'light',\n        piece: null\n      }\n      dark = !dark\n    }\n    board[letterIds[i]] = squares\n  }\n  return board\n}\n\nconst ChessBoard = () => {\n\n\n  const [chessBoard, setChessBoard] = [initializeChessBoard()]\n\n  console.log(chessBoard)\n  console.log(chessBoard['a']['1']);\n\n  return (\n    <div>\n      {chessBoard.keys().map(letter => {\n        letter.keys().map(number => {\n          return (\n            <div>{letter}, {number}</div>\n          )\n        })\n      })}\n    </div>\n  )\n}\n\nexport default ChessApp"]},"metadata":{},"sourceType":"module"}