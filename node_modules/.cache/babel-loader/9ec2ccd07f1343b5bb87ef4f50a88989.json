{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nntca\\\\Desktop\\\\proj\\\\chess-web-app\\\\src\\\\ChessApp.js\",\n    _s = $RefreshSig$();\n\nimport './ChessApp.css';\nimport react, { useState, useEffect } from 'react';\nimport DrawBoard from './components/DrawBoard';\nimport ChessLogicManager from './managers/ChessLogicManager';\nimport kinglight from './images/Chess_klt45.svg';\nimport kingdark from './images/Chess_kdt45.svg';\nimport queenlight from './images/Chess_qlt45.svg';\nimport queendark from './images/Chess_qdt45.svg';\nimport bishoplight from './images/Chess_blt45.svg';\nimport bishopdark from './images/Chess_bdt45.svg';\nimport knightlight from './images/Chess_nlt45.svg';\nimport knightdark from './images/Chess_ndt45.svg';\nimport rooklight from './images/Chess_rlt45.svg';\nimport rookdark from './images/Chess_rdt45.svg';\nimport pawnlight from './images/Chess_plt45.svg';\nimport pawndark from './images/Chess_pdt45.svg';\nimport marker from './images/circle-64.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pieceImages = {\n  kl: kinglight,\n  kd: kingdark,\n  ql: queenlight,\n  qd: queendark,\n  bl: bishoplight,\n  bd: bishopdark,\n  nl: knightlight,\n  nd: knightdark,\n  rl: rooklight,\n  rd: rookdark,\n  pl: pawnlight,\n  pd: pawndark\n};\nconst initialPieces = {\n  1: 'r',\n  2: 'n',\n  3: 'b',\n  4: 'q',\n  5: 'k',\n  6: 'b',\n  7: 'n',\n  8: 'r'\n};\nconst numberToLetter = {\n  1: 'a',\n  2: 'b',\n  3: 'c',\n  4: 'd',\n  5: 'e',\n  6: 'f',\n  7: 'g',\n  8: 'h'\n};\n\nconst initializeChessBoard = () => {\n  const board = {};\n  const letterIds = [1, 2, 3, 4, 5, 6, 7, 8]; // 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'\n\n  const numberIds = [1, 2, 3, 4, 5, 6, 7, 8];\n  var dark = true;\n\n  for (var letter of letterIds) {\n    const squares = {};\n\n    for (var number of numberIds) {\n      var colorPiece = null;\n      var typePiece = null;\n\n      if (number === 1 || number === 2) {\n        colorPiece = 'l';\n\n        if (number === 1 || number === 8) {\n          typePiece = initialPieces[letter];\n        } else {\n          typePiece = 'p';\n        }\n      } else if (number === 7 || number === 8) {\n        colorPiece = 'd';\n\n        if (number === 1 || number === 8) {\n          typePiece = initialPieces[letter];\n        } else {\n          typePiece = 'p';\n        }\n      }\n\n      var pickedPiece = {\n        type: typePiece,\n        color: colorPiece,\n        clicked: false,\n        canMoveHere: false\n      }; // console.log(pickedPiece);\n\n      squares[number] = {\n        color: dark ? 'darkGray' : 'lightGray',\n        piece: pickedPiece // piece: null\n        // piece: {\n        //   type: 'q',\n        //   color: 'l'\n        // }\n\n      };\n      dark = !dark;\n    }\n\n    dark = !dark;\n    board[letter] = squares;\n  }\n\n  console.log(board);\n  return board;\n};\n\nconst ChessApp = () => {\n  _s();\n\n  const [chessBoard, setChessBoard] = useState(initializeChessBoard());\n  const [isDisplayingPossibleMoves, setisDisplayingPossibleMoves] = useState(false);\n\n  const onPieceClickHandler = (chessPiece, letter, number) => {\n    var possibleMoves = [];\n\n    switch (chessPiece.type) {\n      case null:\n        return null;\n\n      case 'k':\n        possibleMoves = getPossibleMovesKing();\n        break;\n\n      case 'q':\n        break;\n\n      case 'b':\n        break;\n\n      case 'n':\n        break;\n\n      case 'r':\n        break;\n\n      case 'p':\n        possibleMoves = getPossibleMovesPawn();\n        break;\n\n      default:\n        break;\n    }\n\n    console.log(chessPiece);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DrawBoard, {\n      chessBoard: chessBoard,\n      onPieceClickHandler: onPieceClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChessApp, \"0kCbDVwSM5FkIyDz3C1zuq16nnE=\");\n\n_c = ChessApp;\nexport default ChessApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChessApp\");","map":{"version":3,"sources":["C:/Users/nntca/Desktop/proj/chess-web-app/src/ChessApp.js"],"names":["react","useState","useEffect","DrawBoard","ChessLogicManager","kinglight","kingdark","queenlight","queendark","bishoplight","bishopdark","knightlight","knightdark","rooklight","rookdark","pawnlight","pawndark","marker","pieceImages","kl","kd","ql","qd","bl","bd","nl","nd","rl","rd","pl","pd","initialPieces","numberToLetter","initializeChessBoard","board","letterIds","numberIds","dark","letter","squares","number","colorPiece","typePiece","pickedPiece","type","color","clicked","canMoveHere","piece","console","log","ChessApp","chessBoard","setChessBoard","isDisplayingPossibleMoves","setisDisplayingPossibleMoves","onPieceClickHandler","chessPiece","possibleMoves","getPossibleMovesKing","getPossibleMovesPawn"],"mappings":"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","sourcesContent":["import './ChessApp.css';\n\nimport react, { useState, useEffect } from 'react'\nimport DrawBoard from './components/DrawBoard'\nimport ChessLogicManager from './managers/ChessLogicManager'\n\nimport kinglight from './images/Chess_klt45.svg'\nimport kingdark from './images/Chess_kdt45.svg'\nimport queenlight from './images/Chess_qlt45.svg'\nimport queendark from './images/Chess_qdt45.svg'\nimport bishoplight from './images/Chess_blt45.svg'\nimport bishopdark from './images/Chess_bdt45.svg'\nimport knightlight from './images/Chess_nlt45.svg'\nimport knightdark from './images/Chess_ndt45.svg'\nimport rooklight from './images/Chess_rlt45.svg'\nimport rookdark from './images/Chess_rdt45.svg'\nimport pawnlight from './images/Chess_plt45.svg'\nimport pawndark from './images/Chess_pdt45.svg'\n\nimport marker from './images/circle-64.png'\n\n\nconst pieceImages = {\n  kl: kinglight,\n  kd: kingdark,\n  ql: queenlight,\n  qd: queendark,\n  bl: bishoplight,\n  bd: bishopdark,\n  nl: knightlight,\n  nd: knightdark,\n  rl: rooklight,\n  rd: rookdark,\n  pl: pawnlight,\n  pd: pawndark \n}\n\nconst initialPieces = {\n  1: 'r',\n  2: 'n',\n  3: 'b',\n  4: 'q',\n  5: 'k',\n  6: 'b',\n  7: 'n',\n  8: 'r'\n}\n\nconst numberToLetter = {\n  1: 'a',\n  2: 'b',\n  3: 'c',\n  4: 'd',\n  5: 'e',\n  6: 'f',\n  7: 'g',\n  8: 'h'\n}\n\nconst initializeChessBoard = () => {\n  const board = {}\n  const letterIds = [1, 2, 3, 4, 5, 6, 7, 8]\n  // 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'\n  const numberIds = [1, 2, 3, 4, 5, 6, 7, 8]\n  var dark = true\n  for (var letter of letterIds) {\n    const squares = {}\n    for (var number of numberIds) {\n      var colorPiece = null\n      var typePiece = null\n\n      if (number === 1 || number === 2) {\n        colorPiece = 'l'\n        if (number === 1 || number === 8) {\n          typePiece = initialPieces[letter]\n        }\n        else {\n          typePiece = 'p'\n        }\n      }\n      else if (number === 7 || number === 8) {\n        colorPiece = 'd'\n        if (number === 1 || number === 8) {\n          typePiece = initialPieces[letter]\n        }\n        else {\n          typePiece = 'p'\n        }\n      }\n\n      var pickedPiece = {\n        type: typePiece,\n        color: colorPiece,\n        clicked: false,\n        canMoveHere: false\n      }\n      // console.log(pickedPiece);\n\n      squares[number] = {\n        color: dark ? 'darkGray' : 'lightGray',\n        piece: pickedPiece\n        // piece: null\n        // piece: {\n        //   type: 'q',\n        //   color: 'l'\n        // }\n      }\n      dark = !dark\n    }\n    dark = !dark\n    board[letter] = squares\n  }\n  console.log(board);\n  return board\n}\n\nconst ChessApp = () => {\n\n  const [chessBoard, setChessBoard] = useState(initializeChessBoard())\n  const [isDisplayingPossibleMoves, setisDisplayingPossibleMoves] = useState(false)\n\n  const onPieceClickHandler = (chessPiece, letter, number) => {\n\n    var possibleMoves = []\n\n    switch (chessPiece.type) {\n      case null:\n        return null\n      case 'k':\n        possibleMoves = getPossibleMovesKing()\n        break;\n      case 'q':\n        break;\n      case 'b':\n        break;\n      case 'n':\n        break;\n      case 'r':\n        break;\n      case 'p':\n        possibleMoves = getPossibleMovesPawn()\n        break;\n      default:\n        break;\n    }\n\n    console.log(chessPiece);\n\n  }\n\n  return (\n    <div>\n      <DrawBoard chessBoard={chessBoard} onPieceClickHandler={onPieceClickHandler}/>\n    </div>\n  )\n}\n\n\nexport default ChessApp"]},"metadata":{},"sourceType":"module"}